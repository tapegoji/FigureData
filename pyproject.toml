[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "figuredetect"
version = "1.1.0"
description = "A YOLOv11-based figure detection system for document images"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "innovoltive", email = "info@innovoltive.com"}
]
maintainers = [
    {name = "innovoltive", email = "info@innovoltive.com"}
]
keywords = ["computer-vision", "object-detection", "yolo", "figure-detection", "document-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.7.0,<2.5.0",
    "torchvision>=0.8.0,<0.20.0",
    "opencv-python>=4.5.0",
    "matplotlib>=3.3.0",
    "Pillow>=8.0.0",
    "numpy>=1.19.0",
    "pandas>=1.1.4",
    "pyyaml>=5.3.1",
    "tqdm>=4.64.0",
    "seaborn>=0.11.0",
    "gitpython",
    "ipython",
    "ultralytics>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black",
    "flake8",
    "mypy",
]

[project.urls]
Homepage = "https://github.com/yourusername/figuredetect"
Repository = "https://github.com/yourusername/figuredetect"
Documentation = "https://github.com/yourusername/figuredetect#readme"
"Bug Tracker" = "https://github.com/yourusername/figuredetect/issues"

[tool.setuptools.packages.find]
include = ["detector*", "scripts*"]

[tool.setuptools.package-data]
detector = ["*.py"]
scripts = ["*.py"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "-v",
]
